Steps:
	Add a single "speculator"
	Attempts to determine what the true price is
	Attempts to determine the parameters of the market (mu, nu)
	From there, determines the approximate maximum and minimum prices (just math, but probabilistically)
	From there, buys when price is low and sells when price is high

Tasks:
0) Play around with parameter
1) Add subjective price variation (maybe)

1) Create speculator class
2) Figure out the quantities of interest (for computational DM) and how to model them
3) Implement in code
4) Write the send_bid function. Does not have to send in an order; can choose to hold.
5) Instantiate, test again, see how well the speculator can exploit the irrationality of the other agents.
6) Constant inflow agent
	Think of like a mutual fund that puts in $1000 every week.
	Or a person who automatically invests 5% of their income once a month.


Ideas for speculator:
Uses price from 50 timesteps ago based on now to figure out whether or not to buy or sell
Once an order is sent in, it will attempt to clear for 10 timesteps
The agent optimizes for the expected price 50 timesteps from now
Also accounts for its current stock of commodity.

Agents are judged at the end based on the final sell price.
TODO: pick a nice prior
